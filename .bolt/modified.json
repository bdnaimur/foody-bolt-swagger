[["/home/project/src/routes/auth.js","const express = require('express');\nconst { body } = require('express-validator');\nconst authController = require('../controllers/authController');\n\nconst router = express.Router();\n\n/**\n * @swagger\n * /api/auth/register:\n *   post:\n *     summary: Register a new user\n *     tags: [Auth]\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             required:\n *               - name\n *               - email\n *               - password\n *               - role\n *             properties:\n *               name:\n *                 type: string\n *               email:\n *                 type: string\n *               password:\n *                 type: string\n *               role:\n *                 type: string\n *                 enum: [admin, restaurant_owner, restaurant_manager, delivery_driver, customer]\n *     responses:\n *       201:\n *         description: User registered successfully\n *       400:\n *         description: Invalid input\n */\nrouter.post('/register',\n  [\n    body('name').notEmpty().withMessage('Name is required'),\n    body('email').isEmail().withMessage('Please provide a valid email'),\n    body('password').isLength({ min: 6 }).withMessage('Password must be at least 6 characters long'),\n    body('role').isIn(['admin', 'restaurant_owner', 'restaurant_manager', 'delivery_driver', 'customer']).withMessage('Invalid role')\n  ],\n  authController.register\n);\n\n/**\n * @swagger\n * /api/auth/login:\n *   post:\n *     summary: Login a user\n *     tags: [Auth]\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             required:\n *               - email\n *               - password\n *             properties:\n *               email:\n *                 type: string\n *               password:\n *                 type: string\n *     responses:\n *       200:\n *         description: Login successful\n *       401:\n *         description: Invalid credentials\n */\nrouter.post('/login',\n  [\n    body('email').isEmail().withMessage('Please provide a valid email'),\n    body('password').notEmpty().withMessage('Password is required')\n  ],\n  authController.login\n);\n\nmodule.exports = router;"]]